name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  COMPOSER_CACHE_DIR: ~/.composer/cache

jobs:
  # 🧪 Quality Assurance Pipeline
  quality-assurance:
    name: 🔍 Code Quality (PHP ${{ matrix.php-version }}, Symfony ${{ matrix.symfony-version }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.3']
        symfony-version: ['6.4.*', '7.0.*']
        
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐘 Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo, dom, filter, gd, json, curl
        coverage: none
        tools: composer:v2
        
    - name: 📦 Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
    - name: 🗂️ Cache Composer Dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
          
    - name: ✅ Validate Composer Configuration
      run: composer validate --strict --no-check-all
      
    - name: 📋 Install Dependencies
      run: |
        composer require symfony/framework-bundle:${{ matrix.symfony-version }} --no-update --no-scripts
        composer remove symfony/phpunit-bridge --dev --no-update || true
        composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader
        
    - name: 🔍 Verify No PHPUnit Bridge
      run: |
        if [ -d "vendor/symfony/phpunit-bridge" ]; then
          echo "❌ symfony/phpunit-bridge still installed - removing..."
          rm -rf vendor/symfony/phpunit-bridge
        else
          echo "✅ symfony/phpunit-bridge successfully excluded"
        fi
        
    - name: 🧹 Code Style Check (PHP CS Fixer)
      run: vendor/bin/php-cs-fixer fix --dry-run --diff --config=.php-cs-fixer.dist.php
      
    - name: 🔬 Static Analysis (PHPStan)
      run: vendor/bin/phpstan analyse --memory-limit=1G
      
    - name: 🧪 Unit Tests (PHPUnit)
      run: |
        # Ensure we're using the right PHPUnit version
        vendor/bin/phpunit --version
        vendor/bin/phpunit --colors=always --verbose

  # 🔒 Security Analysis
  security-analysis:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2
        
    - name: 📋 Install Dependencies
      run: composer install --prefer-dist --no-progress --no-interaction
      
    - name: 🔍 Symfony Security Check
      uses: symfonycorp/security-checker-action@v5
      
    - name: 🛡️ Dependency Vulnerability Scan
      run: |
        composer audit --format=table || true

  # 📊 Package Validation
  package-validation:
    name: 📦 Package Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2
        
    - name: 🔍 Composer Package Validation
      run: |
        composer validate --strict
        composer check-platform-reqs
        
    - name: 📋 Dependency Analysis
      run: |
        composer show --tree
        composer outdated --direct || true

  # 🎯 Integration Tests
  integration-tests:
    name: 🔧 Integration Tests
    runs-on: ubuntu-latest
    needs: [quality-assurance]
    
    strategy:
      matrix:
        symfony-version: ['6.4.*', '7.0.*']
        
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, dom, filter, gd, json, curl
        tools: composer:v2
        
    - name: 📋 Install Symfony ${{ matrix.symfony-version }}
      run: |
        composer require symfony/framework-bundle:${{ matrix.symfony-version }} --no-update --no-scripts
        composer install --prefer-dist --no-progress --no-interaction
        
    - name: 🧪 Bundle Integration Test
      run: |
        # Test bundle can be loaded
        php -r "
        require 'vendor/autoload.php';
        use Aria1991\AIDevAssistantBundle\AIDevAssistantBundle;
        \$bundle = new AIDevAssistantBundle();
        echo 'Bundle instantiated successfully: ' . get_class(\$bundle) . PHP_EOL;
        "

  # ✅ Success Notification
  success:
    name: ✅ All Checks Passed
    runs-on: ubuntu-latest
    needs: [quality-assurance, security-analysis, package-validation, integration-tests]
    if: success()
    
    steps:
    - name: 🎉 Success
      run: |
        echo "🎉 All CI/CD checks passed successfully!"
        echo "✅ Code Quality: PASSED"
        echo "🛡️ Security: PASSED" 
        echo "📦 Package: VALIDATED"
        echo "🔧 Integration: PASSED"
        echo ""
        echo "🚀 Ready for production deployment!"
